name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # Specify the Java distribution
          java-version: '21'
          java-package: 'jdk'
          architecture: 'x64'
          check-latest: false
          server-id: 'github'
          server-username: '${{ github.actor }}'
          server-password: '${{ secrets.GITHUB_TOKEN }}'
          overwrite-settings: true


      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      - name: Package Spring Boot application
        run: mvn package

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-app
          path: target/*.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: spring-boot-app
          path: ./app

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Update Lambda function
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws lambda update-function-code --function-name my-spring-boot-lambda --zip-file fileb://app/my-spring-boot-app.zip

#      - name: Deploy to AWS Lambda
#        run: |
#          aws lambda update-function-code --function-name my-spring-boot-lambda --zip-file fileb://app/my-spring-boot-app.zip
