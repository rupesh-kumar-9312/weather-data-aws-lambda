name: CI/CD Pipeline for Spring Boot Lambda

on:
  push:
    branches:
      - master  # Adjust this to your target branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Gradle
      run: ./gradlew build

    - name: Package Lambda
      run: ./gradlew bootJar

    - name: Archive JAR file
      run: |
        mkdir -p build/distributions
        cp build/libs/*.jar build/distributions/
        cd build/distributions
        zip -r lambda-package.zip *.jar
        echo "ZIP_FILE_PATH=$(pwd)/lambda-package.zip" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Upload ZIP to S3
      run: |
        BUCKET_NAME="weather-data-api-0001"
        ZIP_FILE_PATH=${{ env.ZIP_FILE_PATH }}
        aws s3 cp $ZIP_FILE_PATH s3://$BUCKET_NAME/

    - name: Deploy to AWS Lambda
      run: |
        FUNCTION_NAME="WeatherDataLambda"
        ROLE_ARN="arn:aws:iam::345594602684:role/Lambda"
        ZIP_FILE="lambda-package.zip"
        BUCKET_NAME="weather-data-api-0001"
        
        # Check if Lambda function already exists
        FUNCTION_EXISTS=$(aws lambda get-function --function-name $FUNCTION_NAME 2>/dev/null || echo "not_found")
        
        if [ "$FUNCTION_EXISTS" = "not_found" ]; then
          echo "Creating Lambda function..."
          aws lambda create-function \
            --function-name $FUNCTION_NAME \
            --runtime java17 \
            --role $ROLE_ARN \
            --handler org.example.StreamLambdaHandler::handleRequest \
            --code S3Bucket=$BUCKET_NAME,S3Key=$ZIP_FILE \
            --timeout 60 \
            --memory-size 512
        else
          echo "Updating Lambda function..."
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME \
            --s3-bucket $BUCKET_NAME \
            --s3-key $ZIP_FILE
        fi
